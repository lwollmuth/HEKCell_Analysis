||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*************************************************************|Analysis of current-voltage relationships...|*************************************************************|Macro analyzes a single IV using raw sweep records. Plots peak glutamate-activated currents, determines reversal potential, and|define rectification ratio. |Note: Program has algorithm to identify peak currents.|Note: If peak amplitudes are not uniform, alter Window size and retry.|NOTE--only want algorithm for peaks....needs to be rebuild once SSAnalysis completed...|Below is algorithm for peak current identification|Macro analyzes steady-state IV using raw sweep records. Plots SS glutamate-activated currents, determines reversal potential, and|define rectification ratio.Macro PeakIVAnalysis (nooftraces,groupno,expno,totalgroupno,startingvolts,voltincrement,startbaseline,endbaseline,window)	Variable nooftraces = Gnooftraces		prompt nooftraces,"Number of current traces"	Variable groupno = Ggroupno	prompt groupno, "Initial Group number"	Variable expno = Gexpno	prompt expno, "Exp. number"	Variable totalgroupno = Gtotalgroupno	prompt totalgroupno, "Total Number of Groups"	Variable startingvolts = Gstartingvolts	prompt startingvolts, "Starting voltage (mV)"	Variable voltincrement = Gvoltincrement	prompt voltincrement, "Voltage increment"	Variable startbaseline = Gstartbaseline	prompt startbaseline, "Start of baseline (pre/0.01; post/0.96)"	Variable endbaseline = Gendbaseline	prompt endbaseline, "End of baseline (pre/0.25; post/0.99)"	Variable window=Gwindow													|Defines window to locate peak current	prompt window, "Analysis window"			Silent 1		Gnooftraces = nooftraces	Ggroupno = groupno	Gexpno = expno	Gtotalgroupno = totalgroupno	Gstartingvolts = startingvolts	Gvoltincrement = voltincrement	Gstartbaseline = startbaseline	Gendbaseline = endbaseline	Gwindow = window		String iniwavename,subtwave	Variable activewindow													|Variable for Peak Current determination	Variable maxcurrent,mincurrent,preakcurrentloc,peakcurrent			|Variables for Peak Current determination	Variable ivolt,evolt										|(i)nitial volt & (e)nd volt	Variable traceno	Variable zeropot	Variable negvalue,avgposslope,recratio	Variable approval	String IVwaveY,SSMarker		|Define voltage range		ivolt=startingvolts											evolt=ivolt+voltincrement*(nooftraces-1)					do			IVwaveY="IVwaveY" + num2str(groupno) + "_" + num2str(expno) 		Make/O/N=(nooftraces) $IVwaveY								|wave with IV-current values		SSMarker="SSMarker" +num2str(groupno) + "_" + num2str(expno) 		Make/O/N=(2) $SSMarker										|wave with Marker to decribe range for SS currents		traceno = 1					do			iniwavename =  WaveNameBase + num2str(groupno) + "_" + num2str(expno) + "_" + num2str(traceno)			subtwave = "subouto" + num2str(groupno) + "_" + num2str(expno) + "_" + num2str(traceno)			Duplicate/O $iniwavename leakycurrentwave 				|*leak substract wave & convert to pAs				leakycurrentwave=leakycurrentwave*10^12			|converts current to pA				Wavestats/Q/R=(startbaseline,endbaseline) leakycurrentwave		|defines leakcurrent					leakcurrent=V_avg				leakycurrentwave=leakycurrentwave-leakcurrent		|leak subtraction						Duplicate/O leakycurrentwave $subtwave					|working wave for analysis|*Routine to identify steady-state current amplitude		|				Wavestats/Q/R=(startSScurrent,endSScurrent) $subtwave			|determining SS current. |					$IVwaveY[traceno-1]=V_avg|*Routine to identify peak current amplitude				if (traceno < 8)													|alters window to be larger at potentials away from reversal			activewindow=window+20		else			activewindow=window		endif()							Duplicate/O leakycurrentwave $subtwave						|working wave for analysis			Wavestats/Q/R=(0.025) $subtwave							|determining peak current. Need to avoid first part of wave.				maxcurrent=V_max				mincurrent=V_min			if (maxcurrent>activewindow)								|automated to determine if current is inward or outward				peakcurrent=maxcurrent				peakcurrentloc=V_maxloc											else				peakcurrent=mincurrent				peakcurrentloc=V_minloc				endif			Wavestats/Q/R=(peakcurrentloc-0.0001,peakcurrentloc+0.0001) $subtwave		|makes average around peakcurrent			$IVwaveY[traceno-1]=V_avg								|Assigns peak current to wave													if (traceno == 1)					Display $subtwave					$SSMarker[0]=V_avg+-50; $SSMarker[1]=V_avg+-50|					SetScale/I x startSScurrent,endSScurrent,""$SSMarker				|For steady-state current					SetScale/I x peakcurrentloc-0.0001,peakcurrentloc+0.0001,""$SSMarker				|For steady-state current					Append $SSMarker					ModifyGraph rgb($SSMarker)=(0,0,0)					ModifyGraph mode($SSMarker)=4					SetAxis bottom 0,0.1				else					Append $subtwave				endif					traceno += 1		while (traceno<(nooftraces+1))								SetScale/I x ivolt,evolt,""$IVwaveY							|Setting peak currents to cirrect voltage	||fitting polynomial to selected range		Display $IVwaveY		Modify mode=3,marker=8,rgb=(0,0,0)		Modify tick(bottom)=1,zero(bottom)=1,nticks(bottom)=10		Modify tick=1,zero=1,nticks=10		Label left "Current (pA)"		Label bottom "Volt (mV)"		 		do			voltagerange()				CurveFit/Q poly 4,$IVwaveY(startvolts,endvolts)/D			Make/O/N=1000 displayfit										|creates wave with higher resolution			SetScale/I x startvolts,endvolts,""displayfit;								|changing scaling from time to voltage		|	displayfit=K0+K1*x+K2*x^2+K3*x^3	+K4*x^4+K5*x^5+K6*x^6		|	displayfit=K0+K1*x+K2*x^2+K3*x^3	+K4*x^4+K5*x^5		|	displayfit=K0+K1*x+K2*x^2+K3*x^3	+K4*x^4			displayfit=K0+K1*x+K2*x^2+K3*x^3			|	displayfit=K0+K1*x+K2*x^2				Agreement()												|Verify that rev. potential fit OK...			Approval = YesOrNo		while(Approval !=1)	||determining rev potential as above but for fitted polynomial		Duplicate/O displayfit displayfitabs		displayfitabs=abs(displayfit)		Wavestats/Q displayfitabs		zeropot=V_minloc	||Determining rectification ratio		Wavestats/Q/R=(-80,-80) $IVwaveY			negvalue=abs(V_avg)		Wavestats/Q/R=(80,80) $IVwaveY			avgposslope=V_avg			RecRatio =  negvalue/avgposslope		Textbox/A=RB/X=50/Y=50 "wave= "+ WaveNameBase + num2str(groupno) + "_" + num2str(expno)		Appendtext "rev pot= "+num2str(round(100*zeropot)/100)		Appendtext "negvalue= "+num2str(round(100*negvalue)/100)		Appendtext "posvalue= "+num2str(round(100*avgposslope)/100)		Appendtext "Ratio (-80/+80)= "+num2str(round(100*RecRatio)/100)		Appendtext "ext. soln= "+testsolution		groupno += 1	while(groupno < (totalgroupno + 1))End Macro()||||||||||||||||||||||||||||Macro PeakIVAnalysis (nooftraces,groupno,expno,startingvolts,voltincrement)|	do||		Duplicate/O $iniwavename leakycurrentwave 				|*leak substract wave & convert to pAs|			leakycurrentwave=leakycurrentwave*10^12			|converts current to pA|			Wavestats/Q/R=(startbaseline,endbaseline) leakycurrentwave		|defines leakcurrent|				leakcurrent=V_avg|			leakycurrentwave=leakycurrentwave-leakcurrent		|leak subtraction|		|		if (traceno < 8)												|alters window to be larger at potentials away from reversal|			activewindow=window+20|		else|			activewindow=window|		endif()|					|		Duplicate/O leakycurrentwave $subtwave					|working wave for analysis|			Wavestats/Q/R=(0.025) $subtwave						|determining peak current. Need to avoid first part of wave.|				maxcurrent=V_max|				mincurrent=V_min|			if (maxcurrent>activewindow)							|automated to determine if current is inward or outward|				peakcurrent=maxcurrent|				peakcurrentloc=V_maxloc								|			else|				peakcurrent=mincurrent|				peakcurrentloc=V_minloc	|			endif|	|		Wavestats/Q/R=(peakcurrentloc-0.0001,peakcurrentloc+0.0001) $subtwave		|makes average around peakcurrent|			$IVwaveY[traceno-1]=V_avg								|Assigns peak current to wave						|		|			if (traceno == 1)|				Display $subtwave|			else|				Append $subtwave|			endif|	|		traceno += 1|	while (traceno<(nooftraces+1))					|End Macro()|||||||||||||||||||||||||||||/|Macro analyzes steady-state IV using raw sweep records. Plots SS glutamate-activated currents, determines reversal potential, and|define rectification ratio.Macro SSIVAnalysis (nooftraces,groupno,expno,totalgroupno,startingvolts,voltincrement,startbaseline,endbaseline,startSScurrent,endSScurrent)	Variable nooftraces = Gnooftraces		prompt nooftraces,"Number of current traces"	Variable groupno = Ggroupno	prompt groupno, "Initial Group number"	Variable expno = Gexpno	prompt expno, "Exp. number"	Variable totalgroupno = Gtotalgroupno	prompt totalgroupno, "Total Number of Groups"	Variable startingvolts = Gstartingvolts	prompt startingvolts, "Starting voltage (mV)"	Variable voltincrement = Gvoltincrement	prompt voltincrement, "Voltage increment"	Variable startbaseline = Gstartbaseline	prompt startbaseline, "Start of baseline (pre/0.01; post/0.96)"	Variable endbaseline = Gendbaseline	prompt endbaseline, "End of baseline (pre/0.25; post/0.99)"	Variable startSScurrent = GstartSScurrent	prompt startSScurrent, "Start of SS Current Avg"	Variable endSScurrent = GendSScurrent	prompt endSScurrent, "End of SS Current Avg"	Silent 1		Gnooftraces = nooftraces	Ggroupno = groupno	Gexpno = expno	Gtotalgroupno = totalgroupno	Gstartingvolts = startingvolts	Gvoltincrement = voltincrement	Gstartbaseline = startbaseline	Gendbaseline = endbaseline	GstartSScurrent = startSScurrent	GendSScurrent = endSScurrent		String iniwavename,subtwave		Variable window=30									|defines window to locate peak current--needed??	Variable activewindow	Variable ivolt,evolt										|(i)nitial volt & (e)nd volt	Variable traceno	Variable maxcurrent,mincurrent,preakcurrentloc,peakcurrent	Variable zeropot	Variable negvalue,avgposslope,recratio	Variable approval	String IVwaveY,SSMarker		|Define voltage range		ivolt=startingvolts											evolt=ivolt+voltincrement*(nooftraces-1)					do			IVwaveY="IVwaveY" + num2str(groupno) + "_" + num2str(expno) 		Make/O/N=(nooftraces) $IVwaveY								|wave with IV-current values		SSMarker="SSMarker" +num2str(groupno) + "_" + num2str(expno) 		Make/O/N=(2) $SSMarker										|wave with Marker to decribe range for SS currents		traceno = 1					do			iniwavename =  WaveNameBase + num2str(groupno) + "_" + num2str(expno) + "_" + num2str(traceno)			subtwave = "subouto" + num2str(groupno) + "_" + num2str(expno) + "_" + num2str(traceno)			Duplicate/O $iniwavename leakycurrentwave 				|*leak substract wave & convert to pAs				leakycurrentwave=leakycurrentwave*10^12			|converts current to pA				Wavestats/Q/R=(startbaseline,endbaseline) leakycurrentwave		|defines leakcurrent					leakcurrent=V_avg				leakycurrentwave=leakycurrentwave-leakcurrent		|leak subtraction						Duplicate/O leakycurrentwave $subtwave					|working wave for analysis				Wavestats/Q/R=(startSScurrent,endSScurrent) $subtwave			|determining SS current. 					$IVwaveY[traceno-1]=V_avg						if (traceno == 1)					Display $subtwave					$SSMarker[0]=V_avg+-50; $SSMarker[1]=V_avg+-50					SetScale/I x startSScurrent,endSScurrent,""$SSMarker					Append $SSMarker					ModifyGraph rgb($SSMarker)=(0,0,0)					ModifyGraph mode($SSMarker)=4					SetAxis bottom 0,0.1								else					Append $subtwave				endif					traceno += 1		while (traceno<(nooftraces+1))								SetScale/I x ivolt,evolt,""$IVwaveY							|Setting peak currents to cirrect voltage	||fitting polynomial to selected range		Display $IVwaveY		Modify mode=3,marker=8,rgb=(0,0,0)		Modify tick(bottom)=1,zero(bottom)=1,nticks(bottom)=10		Modify tick=1,zero=1,nticks=10		Label left "Current (pA)"		Label bottom "Volt (mV)"		do			voltagerange()				CurveFit/Q poly 4,$IVwaveY(startvolts,endvolts)/D			Make/O/N=1000 displayfit										|creates wave with higher resolution			SetScale/I x startvolts,endvolts,""displayfit;								|changing scaling from time to voltage		|	displayfit=K0+K1*x+K2*x^2+K3*x^3	+K4*x^4+K5*x^5+K6*x^6		|	displayfit=K0+K1*x+K2*x^2+K3*x^3	+K4*x^4+K5*x^5		|	displayfit=K0+K1*x+K2*x^2+K3*x^3	+K4*x^4			displayfit=K0+K1*x+K2*x^2+K3*x^3			|	displayfit=K0+K1*x+K2*x^2				Agreement()												|Verify that rev. potential fit OK...			Approval = YesOrNo		while(Approval !=1)	||determining rev potential as above but for fitted polynomial		Duplicate/O displayfit displayfitabs		displayfitabs=abs(displayfit)		Wavestats/Q displayfitabs		zeropot=V_minloc	||Determining rectification ratio		Wavestats/Q/R=(-100,-100) $IVwaveY			negvalue=abs(V_avg)		Wavestats/Q/R=(100,100) $IVwaveY			avgposslope=V_avg			RecRatio =  negvalue/avgposslope		Textbox/A=RB/X=50/Y=40 "wave= "+WaveNameBase + num2str(groupno) + "_" + num2str(expno)		Appendtext "rev pot= "+num2str(round(100*zeropot)/100)		Appendtext "negvalue= "+num2str(round(100*negvalue)/100)		Appendtext "posvalue= "+num2str(round(100*avgposslope)/100)		Appendtext "Ratio (-100/+100)= "+num2str(round(100*RecRatio)/100)		Appendtext "ext. soln= "+testsolution		groupno += 1	while(groupno < (totalgroupno + 1))End Macro()|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||Macro analyzes Ramps...developed for ramps with Lurcher mutation. Hence, no contol (leak)|ramp is substracted.Macro RampAnal (extsoln,testsoln,pregroupno,preexpno,testgroupno,testexpno,postgroupno,postexpno)	String extsoln = Gextsoln	prompt extsoln, "Control Solution"	String testsoln = Gtestsoln	prompt testsoln, "Test Solution"	Variable pregroupno = Gpregroupno	prompt pregroupno, "Group no. of Pre appln"	Variable preexpno = Gtestexpno	prompt preexpno, "Exp. no. of Pre appln"	Variable testgroupno = Gtestgroupno	prompt testgroupno, "Group no. of Test appln"	Variable testexpno = Gtestexpno	prompt testexpno, "Exp. no. of Test appln"	Variable postgroupno = Gpostgroupno	prompt postgroupno, "Group no of Post appln"	Variable postexpno = Gpostexpno	prompt postexpno, "Exp. no. of Post appln"		Gextsoln=extsoln	Gtestsoln=testsoln	Gpregroupno=pregroupno	Gpreexpno=preexpno	Gtestgroupno=testgroupno	Gtestexpno=testexpno	Gpostgroupno=postgroupno	Gpostexpno=postexpno		Silent 1	Variable traceno = 1	Variable count,nooframps,avgzeropot,avgamp100,avgamp60	String fitanalysiswave		nooframps=3		Make/O/N=(nooframps) zeropot	Make/O/N=(nooframps) amp100	Make/O/N=(nooframps) amp60	String PreHekaWave,TestHekaWave,PostHekaWave,PreWave,TestWave,PostWave	  		PreHekaWave = WaveNameBase + num2str(pregroupno) + "_" + num2str(preexpno) + "_" + num2str(traceno)	  			SetScale/I x -105,100,""$PreHekaWave	  		PreWave = "PreWave" + num2str(pregroupno) + "_" + num2str(preexpno)				Duplicate/O $PreHekaWave $PreWave				$PreWave=$PreWave*10^12				  	TestHekaWave = WaveNameBase + num2str(testgroupno) + "_" + num2str(testexpno) + "_" + num2str(traceno)		  		SetScale/I x -105,100,""$TestHekaWave		  		TestWave = "TestWave" + num2str(testgroupno) + "_" + num2str(testexpno)				Duplicate/O $TestHekaWave $TestWave				$TestWave=$TestWave*10^12	  		PostHekaWave = WaveNameBase + num2str(postgroupno) + "_" + num2str(postexpno) + "_" + num2str(traceno)	  			SetScale/I x -105,100,""$PostHekaWave									PostWave = "PostWave" + num2str(postgroupno) + "_" + num2str(postexpno)				Duplicate/O $PostHekaWave $PostWave				$PostWave=$PostWave*10^12	Display $Prewave,$TestWave,$PostWave		ModifyGraph rgb($PreWave)=(0,0,0)		ModifyGraph rgb($PostWave)=(0,0,0)		ModifyGraph standoff(left)=0		ModifyGraph standoff(bottom)=0		ModifyGraph zero(left)=1		ModifyGraph zero(left)=4		ModifyGraph lblMargin(left)=10		ModifyGraph zero(bottom)=1		ModifyGraph zero(bottom)=4		Label left "Current (pA)"		Label bottom "Volt (mV)"	count=0	do		if (count==0)			Duplicate/O $PreWave analysiswave			fitanalysiswave=PreWave + " _fit"		else			if (count ==1)				Duplicate/O $TestWave analysiswave				fitanalysiswave=TestWave + "_fit"			else				Duplicate/O $PostWave analysiswave				fitanalysiswave=PostWave + "_fit"			endif()					endif()		||subroutine to determine Erev		||fitting polynomial to selected range		Duplicate/O analysiswave $fitanalysiswave		CurveFit/Q poly 4,analysiswave (-90,+40)/D=$fitanalysiswave		Duplicate/O $fitanalysiswave displayfit		displayfit=K0+K1*x+K2*x^2+K3*x^3		Duplicate/O displayfit displayfitabs		displayfitabs=abs(displayfit)		Wavestats/Q displayfitabs		zeropot[count]=round(100*V_minloc)/100		||measure amplitude at -100 mV			WaveStats/Q/R=(-100,-99.5) analysiswave		amp100[count]=V_avg	||Measure amplitude at +60 mV		WaveStats/Q/R=(+59.5,+60) analysiswave		amp60[count]=V_avg		count+=1	while (count<=nooframps)	Textbox/A=MT/X=2/Y=2 "testsoln= "+testsoln	Appendtext "test wavename= " + TestHekaWave		avgzeropot=(zeropot[0]+zeropot[2])/2	avgamp100=(amp100[0]+amp100[2])/2	avgamp60=(amp60[0]+amp60[2])/2		Textbox/A=LT/X=2/y=25 "test rpot:"+num2str(zeropot[1])	TextBox/C/N=text1/F=0	Appendtext "pre&post:"+num2str(avgzeropot)	Appendtext "test amp100:"+num2str(amp100[1])	Appendtext "pre&post:"+num2str(avgamp100)	Appendtext "test amp60:"+num2str(amp60[1])	Appendtext "pre&post:"+num2str(avgamp60)End Macro()||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||	||Create and display difference wave	string difwave	difwave=filename+num2str(startramp)+"_1_1_dif"	Duplicate/o $diswave1 avgwave	Duplicate/o $diswave3 avgwave2	Duplicate/o $diswave2 testwave	avgwave=(avgwave+avgwave2)/2	testwave=avgwave-testwave	Duplicate/o testwave $difwave		display $difwave		ModifyGraph rgb($difwave)=(0,0,0)	ModifyGraph zero(bottom)=1	ModifyGraph zero(left)=1	Label left "Current (pA)"	Label bottom "Volt (mV)"	Textbox/A=LT/X=2/Y=5 "difwave "	End macro()||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||//For IV Data collected as series with one sweep each, two groups for each potential, first is only capacitance, second has glutamate//activated current. All series are in the same group, only one IV per group. Macro subtracts capacitance and creates new series //suitable for normal IV analysis with new group number and new series number ("exp. number") input by user.//Written by Martin Prieto, 3/9/06. Macro CSub(PAgroup, PAseries, NewGroup, NewSeries) Variable PAgroup=1Prompt PAgroup, "Group number?"Variable PAseries=42Prompt PAseries, "Number of series?"Variable NewGroup=99Prompt NewGroup, "New group number?"Variable NewSeries=1Prompt NewSeries, "New series number?"Variable counter=0Variable pointsString PAString BaselineString NewNameSilent 1Do 		counter+=2	PA="Hekapulse"+num2str(PAgroup)+"_"+num2str(counter)+"_1"		Baseline="Hekapulse"+num2str(PAgroup)+"_"+num2str(counter-1)+"_1"		NewName="Hekapulse"+num2str(NewGroup)+"_"+num2str(NewSeries)+"_"+num2str(counter/2)		wavestats/q $PA	points=V_npnts	make/n=(points) $NewName=($PA)-($Baseline)	SetScale/P x 0,1e-05, $NewName	While (counter<PAseries)End Macro		